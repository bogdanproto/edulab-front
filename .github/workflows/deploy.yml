name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Set up Node ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies 🔃
        run: npm install

      - name: Lint 🧪
        run: npm run eslint:format

      - name: Check formatting 🪶
        run: npm run prettier:format

  security:
    name: Check for vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run SAST scan 🔐
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          # args: |
      #     --severity-threshold=high
      #     --sarif-file-output=snyk.sarif
      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk.sarif

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
      contents: read
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Log in to Docker-Hub 🐬
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker 🏷️
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: probogdan/edulab-fe

      - name: Build and push Docker image 🐬
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to EC2
    needs: push_to_registry
    steps:
      - uses: actions/checkout@v4
      - name: Build & Deploy 🅰️
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_AWS_PASSWORD: ${{ secrets.DOCKER_AWS_PASSWORD }}
          DOCKER_AWS_LOGIN: ${{ secrets.DOCKER_AWS_LOGIN }}
          PRIVATE_KEY: ${{ secrets.AWS_SSH_KEY }}
          HOSTNAME: ${{ secrets.SSH_HOST }}
          USER_NAME: ${{ secrets.USER_NAME }}
          PROV_ENV_FILE: ${{ secrets.PROD_ENV_FILE}}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} << 'EOF'
            docker login --username ${DOCKER_AWS_LOGIN} --password ${DOCKER_AWS_PASSWORD}
            cd docker-compose
            docker-compose -f docker-compose.yml down --rmi all
            docker-compose -f docker-compose.yml up -d
          EOF
